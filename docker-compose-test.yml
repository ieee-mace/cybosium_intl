version: '3'

services:
  db:
    container_name: aksc22_db
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=aksc22_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  web:
    container_name: aksc22_web
    build:
      context: .
      dockerfile: Dockerfile
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env
    restart: unless-stopped

  nginx:
    build:
      context: .
      dockerfile: nginx/Dockerfile`
    container_name: aksc22_nginx
    hostname: aksc22_nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - static_volume:/code/staticfiles
      - media_volume:/code/mediafiles`
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/letsencrypt/lib:/var/lib/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    restart: always
    depends_on:
      - web

  certbot:
    container_name: aksc22_certbot
    image: certbot/certbot:latest
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/letsencrypt/lib:/var/lib/letsencrypt
      - ./data/certbot/www:/var/www/certbot

volumes:
  postgres_data:
  static_volume:
  media_volume:
